services:
  compose-dashboard:
    image: "mcr.microsoft.com/dotnet/nightly/aspire-dashboard:latest"
    environment:
      ASPIRE_DASHBOARD_FORWARDEDHEADERS_ENABLED: "true"
    ports:
      - "8181:18888"
    expose:
      - "18889"
    networks:
      - "aspire"
    restart: "always"
  db:
    image: "docker.io/library/postgres:17.6"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    expose:
      - "5432"
    volumes:
      - type: "volume"
        target: "/var/lib/postgresql/data"
        source: "postgres_data"
        read_only: false
    networks:
      - "aspire"
  redis:
    image: "docker.io/library/redis:8.2"
    command:
      - "-c"
      - "redis-server --requirepass $$REDIS_PASSWORD"
    entrypoint:
      - "/bin/sh"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    expose:
      - "6379"
    networks:
      - "aspire"
  piketapi:
    image: 230279/piketapi:latest
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
      HTTP_PORTS: "${PIKETAPI_PORT}"
      ConnectionStrings__Redis: "Redis:6379,password=${REDIS_PASSWORD}"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://compose-dashboard:18889"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      OTEL_SERVICE_NAME: "piketapi"
    ports:
      - "${PIKETAPI_PORT}:${PIKETAPI_PORT}"
    volumes:
      - picketwebapi_data:/app/photos
    expose:
      - "${PIKETAPI_PORT}"
    depends_on:
      db:
        condition: "service_started"
    networks:
      - "aspire"

  smkn8picketclient:
    container_name: smkn8picketclient
    image: 230279/smkn8picketclient:latest
    restart: always
    # build:
      # context: ../../../smkn8picket-client
      # dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
      VITE_API_URL: http://localhost:5001
      VITE_LOGO: /smk.png
    ports:
      - 0.0.0.0:8080:80

  whatsapp:
    container_name: whatsapp
    image: 230279/whatsapp:1.0.1
    restart: always
    # build:
    #   context: WhatsApp
    #   dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
        restart: true
    ports:
      - 3000:3000 


networks:
  aspire:
    driver: "bridge"
volumes:
  picketwebapi_data:    
  postgres_data:
    driver: "local"
